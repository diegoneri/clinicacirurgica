/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.cirurgica.view.pedido;

import br.com.cirurgica.dao.PedidoDAO;
import br.com.cirurgica.model.Pedido;
import br.com.cirurgica.view.IView;
import br.com.cirurgica.view.PrincipalView;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.EventListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author 13b Pessoal
 */
public class GestaoPedido extends javax.swing.JFrame implements IView {

    private Pedido pedidoTela;

    /**
     * Creates new form GestaoPedido
     */
    public GestaoPedido() {
        initComponents();
        popularTabela();

        btnAdicionar.addKeyListener(new PressEnter());
        btnPesquisar.addKeyListener(new PressEnter());
        btnVoltar.addKeyListener(new PressEnter());
        btnAlterar.addKeyListener(new PressEnter());
        btnExcluir.addKeyListener(new PressEnter());
        cbPesquisa.addKeyListener(new PressEnter());
    }

    public GestaoPedido(EventListener listeners) {
        initComponents();
        atribuirListeners(listeners);
    }

    public void chamarCadastrarPedido() {
        this.fecharJanela();
        PesquisarFornecedor pf = new PesquisarFornecedor();
        pf.setVisible(true);
    }

    public void chamarVisualizarPedido() throws ParseException {
        if (tbPedidos.getSelectedRowCount() == 0 || getPedido() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um Pedido para Visualizar e/ou Alterar seus dados.", "Seleção Necessária", 1);
        } else {
            CadastrarPedido pedido = new CadastrarPedido(getPedido(), null);
            pedido.setVisible(true);
            this.fecharJanela();
        }

    }

    public void voltar() {
        PrincipalView p = new PrincipalView();
        p.setVisible(true);
        this.dispose();
    }

    public void pesquisarPedido() throws ParseException {

        Date dataPesquisa = this.getNomePesquisa();
        PedidoDAO dao = new PedidoDAO();
        Collection listaRetorno = dao.getByDataPedido(dataPesquisa);
        this.getListaPedido().clear();
        if (listaRetorno != null && listaRetorno.size() > 0) {
            this.getListaPedido().addAll(listaRetorno);
        } else {
            JOptionPane.showMessageDialog(this, "Não há pedidos com a data selecionada!", "Pedidos", JOptionPane.WARNING_MESSAGE);
        }

    }

    public final void popularTabela() {
        this.listaPedidos.clear();
        PedidoDAO dao = new PedidoDAO();
        this.listaPedidos.addAll(dao.findAll());
    }

    public void excluirPedido() throws ParseException {
        try {
            PedidoDAO dao = new PedidoDAO();
            int resp =
                    JOptionPane.showConfirmDialog(this, "Deseja excluir o pedido selecionado?", "Excluindo pedido", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (resp == JOptionPane.YES_OPTION) {
                dao.excluir(this.getPedido());
                JOptionPane.showMessageDialog(this, "Pedido excluído com sucesso!", "Exclusão de pedido", JOptionPane.INFORMATION_MESSAGE);
                this.getListaPedido().remove(this.getPedido());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "O pedido não foi excluído!", "Exclusão de pedido", JOptionPane.WARNING_MESSAGE);
            Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        listaPedidos = org.jdesktop.observablecollections.ObservableCollections.observableList(new ArrayList());
        moneyCellRenderer = new br.com.cirurgica.view.utils.cell.MoneyCellRenderer();
        booleanCellRenderer = new br.com.cirurgica.view.utils.cell.BooleanCellRenderer();
        dateTimeCellRenderer = new br.com.cirurgica.view.utils.cell.DateTimeCellRenderer();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPedidos = new javax.swing.JTable();
        tbPedidos.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent arg0) {
                if(tbPedidos.getSelectedRow() != -1){
                    pedidoTela = listaPedidos.get(tbPedidos.getSelectedRow());
                    btnAlterar.setEnabled(true);
                    btnExcluir.setEnabled(true);
                }else{
                    pedidoTela = null;
                    btnExcluir.setEnabled(false);
                    btnAlterar.setEnabled(false);
                }
            }
        });
        jPanel1 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAlterar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cbPesquisa = new org.freixas.jcalendar.JCalendarCombo();

        moneyCellRenderer.setText("moneyCellRenderer");

        booleanCellRenderer.setText("booleanCellRenderer1");

        dateTimeCellRenderer.setText("dateTimeCellRenderer1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Ana Maria Cirurgica - Pedidos");
        setBounds(new java.awt.Rectangle(300, 10, 0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel1.setText("Pedidos");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(jLabel1, gridBagConstraints);

        tbPedidos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbPedidos.setFocusable(false);
        tbPedidos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listaPedidos, tbPedidos, "");
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataPedido}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cdFornecedor.nmRazaoSocial}"));
        columnBinding.setColumnName("Fornecedor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${isPago}"));
        columnBinding.setColumnName("Pago?");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${isRecebido}"));
        columnBinding.setColumnName("Recebido?");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorPedido}"));
        columnBinding.setColumnName("Valor");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tbPedidos);
        tbPedidos.getColumnModel().getColumn(0).setResizable(false);
        tbPedidos.getColumnModel().getColumn(0).setPreferredWidth(59);
        tbPedidos.getColumnModel().getColumn(0).setCellRenderer(dateTimeCellRenderer);
        tbPedidos.getColumnModel().getColumn(1).setPreferredWidth(180);
        tbPedidos.getColumnModel().getColumn(2).setPreferredWidth(25);
        tbPedidos.getColumnModel().getColumn(2).setCellRenderer(booleanCellRenderer);
        tbPedidos.getColumnModel().getColumn(3).setResizable(false);
        tbPedidos.getColumnModel().getColumn(3).setPreferredWidth(25);
        tbPedidos.getColumnModel().getColumn(3).setCellRenderer(booleanCellRenderer);
        tbPedidos.getColumnModel().getColumn(4).setResizable(false);
        tbPedidos.getColumnModel().getColumn(4).setPreferredWidth(40);
        tbPedidos.getColumnModel().getColumn(4).setCellRenderer(moneyCellRenderer);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAdicionar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bt_novo_cliente.png"))); // NOI18N
        btnAdicionar.setPreferredSize(new java.awt.Dimension(90, 60));
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        btnAdicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAdicionarKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ADICIONAR");

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bt_pesquisar.png"))); // NOI18N
        btnPesquisar.setPreferredSize(new java.awt.Dimension(90, 60));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PESQUISAR");

        btnVoltar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bt_voltar.png"))); // NOI18N
        btnVoltar.setPreferredSize(new java.awt.Dimension(90, 60));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setText("VOLTAR(ESC)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setText("Data do Pedido:");

        btnAlterar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bt_alterar.png"))); // NOI18N
        btnAlterar.setEnabled(false);
        btnAlterar.setPreferredSize(new java.awt.Dimension(90, 60));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("ALTERAR");

        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bt_excluir.png"))); // NOI18N
        btnExcluir.setEnabled(false);
        btnExcluir.setPreferredSize(new java.awt.Dimension(90, 60));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("EXCLUIR");

        cbPesquisa.setDate(new java.util.Date());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = -167;
        gridBagConstraints.ipady = 297;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 1);
        getContentPane().add(jPanel2, gridBagConstraints);

        bindingGroup.bind();

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-806)/2, (screenSize.height-621)/2, 806, 621);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        voltar();
    }//GEN-LAST:event_formWindowClosing

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            excluirPedido();
        } catch (ParseException ex) {
            Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        try {
            chamarVisualizarPedido();
        } catch (ParseException ex) {
            Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        voltar();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        try {
            pesquisarPedido();
        } catch (ParseException ex) {
            Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnAdicionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdicionarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAdicionarKeyPressed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        chamarCadastrarPedido();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestaoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestaoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestaoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestaoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GestaoPedido().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    @Override
    public void cancelarFechamento() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void fecharJanela() {
        this.dispose();
    }

    @Override
    public void atribuirListeners(EventListener listener) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private Date getNomePesquisa() {
        return this.cbPesquisa.getDate();
    }

    private List<Pedido> getListaPedido() {
        return this.listaPedidos;
    }

    private Pedido getPedido() {
        return this.pedidoTela;
    }

    class PressEnter implements KeyListener {

        public void keyPressed(KeyEvent e) {
            // TODO Auto-generated method stub  

            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                if (btnAdicionar.isFocusOwner()) {
                    chamarCadastrarPedido();
                } else if (btnPesquisar.isFocusOwner()) {
                    try {
                        pesquisarPedido();
                    } catch (ParseException ex) {
                        Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (btnVoltar.isFocusOwner()) {
                    voltar();
                } else if (btnAlterar.isFocusOwner()) {
                    try {
                        chamarVisualizarPedido();
                    } catch (ParseException ex) {
                        Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (btnExcluir.isFocusOwner()) {
                    try {
                        excluirPedido();
                    } catch (ParseException ex) {
                        Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (cbPesquisa.isFocusOwner()) {
                    try {
                        pesquisarPedido();
                    } catch (ParseException ex) {
                        Logger.getLogger(GestaoPedido.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
                voltar();
            }
        }

        public void keyReleased(KeyEvent e) {
        }

        public void keyTyped(KeyEvent e) {
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.cirurgica.view.utils.cell.BooleanCellRenderer booleanCellRenderer;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnVoltar;
    private org.freixas.jcalendar.JCalendarCombo cbPesquisa;
    private br.com.cirurgica.view.utils.cell.DateTimeCellRenderer dateTimeCellRenderer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.util.List<br.com.cirurgica.model.Pedido> listaPedidos;
    private br.com.cirurgica.view.utils.cell.MoneyCellRenderer moneyCellRenderer;
    private javax.swing.JTable tbPedidos;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
